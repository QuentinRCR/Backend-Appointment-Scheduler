plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id 'checkstyle' //Pour avoir de l'analyse static
	//id 'war' //pour pouvoir package l'application en un fichier .war pour la d√©ployer sur un serveur
}


group = 'com.docto'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation group: 'com.sun.mail', name: 'javax.mail', version: '1.5.5'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	// https://mvnrepository.com/artifact/com.auth0/java-jwt
	implementation group: 'com.auth0', name: 'java-jwt', version: '3.18.1'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // libs to use JPA in your project
	implementation 'com.h2database:h2' // libs to use a H2 database
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation ("org.springframework.boot:spring-boot-starter-mail")
	implementation("javax.mail:javax.mail-api")
	implementation("org.springframework.boot:spring-boot-starter-security")
	testImplementation("org.springframework.security:spring-security-test")

	// Pour avoir une database mysql
	//implementation group: 'mysql', name: 'mysql-connector-java', version: '5.1.13'

	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5'

	implementation group: 'org.apache.poi', name: 'poi', version: '3.7'
}

tasks.named('test') {
	useJUnitPlatform()
}

